spring:
  application:
    name: order
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848

server:
  port: 18082
# 修改服务地址轮询策略，item 指定的是 商品微服务的服务名称
item:
  ribbon:
    #轮询
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
    #随机算法
    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
    #重试算法,该算法先按照轮询的策略获取服务,如果获取服务失败则在指定的时间内会进行重试，获取可用的服务
    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule
    #加权法,会根据平均响应时间计算所有服务的权重，响应时间越快服务权重越大被选中的概率越大。刚启动时如果同统计信息不足，则使用轮询的策略，等统计信息足够会切换到自身规则。
    #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.ZoneAvoidanceRule
feign:
  client:
    config:
      default: # default指定的是所有的feign客户端 都设置为该配置超时时间
        connectTimeout: 5000 # 链接超时时间
        readTimeout: 5000 # 读取的超时时间